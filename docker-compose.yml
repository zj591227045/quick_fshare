version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
      target: production
    container_name: quick-fshare-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/default.conf:/etc/nginx/conf.d/default.conf:ro
      - nginx_logs:/var/log/nginx
    restart: unless-stopped
    networks:
      - app-network

  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
      target: production
    container_name: quick-fshare-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET:-your-super-secret-refresh-key-change-in-production}
      - DB_PATH=/app/database/fshare.db
      - UPLOAD_PATH=/app/uploads
      - THUMBNAIL_PATH=/app/thumbnails
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - MAX_FILE_SIZE=${MAX_FILE_SIZE:-104857600}
      - RATE_LIMIT_WINDOW=${RATE_LIMIT_WINDOW:-900000}
      - RATE_LIMIT_MAX=${RATE_LIMIT_MAX:-100}
    volumes:
      - app_database:/app/database
      - app_uploads:/app/uploads
      - app_thumbnails:/app/thumbnails
      - app_logs:/app/logs
      - ${SHARED_VOLUMES:-./data}:/app/shared:ro
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  app_database:
    driver: local
  app_uploads:
    driver: local
  app_thumbnails:
    driver: local
  app_logs:
    driver: local
  nginx_logs:
    driver: local

networks:
  app-network:
    driver: bridge